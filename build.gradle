plugins {
    id 'java'
    id 'org.hidetake.ssh' version '2.11.2'
    id 'de.jjohannes.extra-java-module-info' version '0.11'
}

group = 'esialrobotik.ia'
version = '3.0'
description = """EsialRobotik IA"""

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

plugins.withType(JavaPlugin).configureEach {
    java {
        modularity.inferModulePath = true
    }
}

ssh.settings {
    dryRun = project.hasProperty('dryRun')
    knownHosts = allowAnyHosts
}

remotes {
    bigPrincessPi {
        host = bigPrincessPiSettingsHost
        user = bigPrincessPiSettingsUser
        identity = file("${System.properties['user.home']}/.ssh/id_rsa")
    }
    smallPrincessPi {
        host = smallPrincessPiSettingsHost
        user = smallPrincessPiSettingsUser
        identity = file("${System.properties['user.home']}/.ssh/id_rsa")
    }
}

// Copy the Java modules, run script and JAR in the distribution directory
// Copy the Java modules, run script and JAR in the distribution directory
tasks.register("copyDistribution", Copy) {
    from configurations.runtimeClasspath
    from tasks.named('jar')
    from layout.projectDirectory.file('assets/run.sh')
    into layout.buildDirectory.dir('distribution')
}
tasks.named("build") {
    dependsOn("copyDistribution")
}

// SSH deploy
task deployBigPrincess(dependsOn: ["build"]) {
    doLast {
        ssh.run {
            session(remotes.bigPrincessPi) {
                put from: projectHome + '/build/distribution/', into: 'IA'
                put from: projectHome + '/config/2023/config.json', into: 'IA'
                put from: projectHome + '/config/2023/configCollection.json', into: 'IA'
                put from: projectHome + '/config/2023/table.json', into: 'IA'
                put from: projectHome + '/config/2023/table0.tbl', into: 'IA'
                put from: projectHome + '/config/2023/table3000.tbl', into: 'IA'
                put from: projectHome + '/src/main/java/esialrobotik/ia/actions/a2023/actions/', into: 'IA'
                execute 'sudo rm -rf IA/webRootDir/*'
                execute 'sudo sync'
            }
        }
    }
}

task deploySmallPrincess(dependsOn: ["build"]) {
    doLast {
        ssh.run {
            session(remotes.smallPrincessPi) {
                put from: 'build/libs/esialrobotik.ia-3.0-all.jar', into: 'IA'
                put from: 'config/2023/config_PMI.json', into: 'IA/config.json'
                put from: 'config/2023/configCollectionPmi.json', into: 'IA'
                put from: 'config/2023/table.json', into: 'IA'
                put from: 'config/2023/table0.tbl', into: 'IA'
                put from: 'config/2023/table3000.tbl', into: 'IA'
                put from: 'src/main/java/esialrobotik.ia.actions/a2023/esialrobotik.ia.actions/', into: 'IA'
                execute 'sudo rm -rf IA/webRootDir/*'
                execute 'sudo sync'
            }
        }
    }
}

task fetchActionsBigPrincess {
    doLast {
        ssh.run {
            session(remotes.bigPrincessPi) {
                get from: 'IA/esialrobotik.ia.actions/', into: 'src/main/java/esialrobotik.ia.actions/a2023/'
            }
        }
    }
}

task fetchActionSmallPrincess {
    doLast {
        ssh.run {
            session(remotes.smallPrincessPi) {
                get from: 'IA/esialrobotik.ia.actions/', into: 'src/main/java/esialrobotik.ia.actions/a2023/'
            }
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Log4J : https://logging.apache.org/log4j/2.x/
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'

    // Log à étudier
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'org.slf4j:slf4j-simple:1.7.32'

    // Pi4J : https://pi4j.com
    implementation 'com.pi4j:pi4j-core:2.4.0'
    implementation 'com.pi4j:pi4j-plugin-raspberrypi:2.4.0'
    implementation 'com.pi4j:pi4j-plugin-pigpio:2.4.0'

    // PiCam : https://github.com/caprica/picam
    implementation group: 'uk.co.caprica', name: 'picam', version: '2.0.2'

    // GSon
    implementation 'com.google.code.gson:gson:2.8.9'

    // RXTX
    implementation group: 'org.rxtx', name: 'rxtx', version: '2.1.7'

    // Lib de WebSocket
    implementation 'org.java-websocket:Java-WebSocket:1.5.4'
}

extraJavaModuleInfo {
    module("picam-2.0.2.jar", "picam", "2.0.2") {
        exports("uk.co.caprica.picam")
        exports("uk.co.caprica.picam.enums")
    }
    module("rxtx-2.1.7.jar", "rxtx", "2.1.7") {
        exports("gnu.io")
    }
}

